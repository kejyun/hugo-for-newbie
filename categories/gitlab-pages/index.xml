<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo 新手道場 – Gitlab Pages</title>
    <link>https://hugo-for-newbie.kejyun.com/categories/gitlab-pages/</link>
    <description>Recent content in Gitlab Pages on Hugo 新手道場</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 18 Nov 2021 03:11:29 +0800</lastBuildDate>
    
	  <atom:link href="https://hugo-for-newbie.kejyun.com/categories/gitlab-pages/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Gitlab Page</title>
      <link>https://hugo-for-newbie.kejyun.com/docs/deploy/gitlab/</link>
      <pubDate>Thu, 18 Nov 2021 03:11:29 +0800</pubDate>
      
      <guid>https://hugo-for-newbie.kejyun.com/docs/deploy/gitlab/</guid>
      <description>
        
        
        &lt;p&gt;Gitlab 與 Github 都有提供靜態空間頁面給我們放上靜態的 html, css, js 檔案，可以變成一個靜態頁面供網友存取，但 Github pages 的空間如果要變成私密的方式，不想要讓其他人可以直接下載你整包的網站 html 的話，只能 &lt;code&gt;付費&lt;/code&gt; 才能夠有這個功能，Gitlab pages 則是免費就可以使用私密的方式架設你的網站，&lt;code&gt;不需要額外付費&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hugo 產生出來的靜態檔案放在 &lt;code&gt;public&lt;/code&gt; 目錄，可以將 Gitlab Page 的目錄指定到 Repository 的 &lt;code&gt;public&lt;/code&gt; 中&lt;/p&gt;
&lt;h2 id=&#34;設定-gitlab-page-部署設定檔-gitlab-ciyml&#34;&gt;設定 Gitlab Page 部署設定檔 .gitlab-ci.yml&lt;/h2&gt;
&lt;p&gt;在 Repository 跟目錄建立 &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; 檔案，在 &lt;code&gt;artifacts&lt;/code&gt; 設定 Gitlab pages 的目錄，並設定只有在 &lt;code&gt;main&lt;/code&gt; 的分支才會部署&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# .gitlab-ci.yml&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;alpine:latest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;deploy&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;echo &amp;#39;Do nothing&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# gitlab page 目錄&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;artifacts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;paths&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 只有在 main 分支的 public 目錄才會被部署&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;only&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;建立-hugo-靜態檔案&#34;&gt;建立 Hugo 靜態檔案&lt;/h2&gt;
&lt;p&gt;使用指令建立最後的 hugo 靜態頁面檔案，建立的檔案會放在 &lt;code&gt;public&lt;/code&gt; 目錄中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ hugo --gc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;repository-push-到-gitlab-部署&#34;&gt;Repository Push 到 Gitlab 部署&lt;/h2&gt;
&lt;p&gt;在 Hugo 網站的 Repository 推到 Gitlab 後，Gitlab 會針對 &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; 的部署設定進行 Gitlab Page 的部署&lt;/p&gt;
&lt;p&gt;到 Repo 的 &lt;code&gt;CI/CD &amp;gt; Piplines&lt;/code&gt; 可以看到會立即執行部署的指令，看到狀態變更為 &lt;code&gt;passed&lt;/code&gt; 就表示執行成功了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/gitlab/gitlab-pages-1.png&#34; alt=&#34;Gitlab page&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;檢視部署的-gitlab-pages&#34;&gt;檢視部署的 Gitlab Pages&lt;/h2&gt;
&lt;p&gt;在 Repo 的 &lt;code&gt;Settings &amp;gt; Pages&lt;/code&gt; 那邊可以看到你的 Gitlab Pages 的網址，預設是 &lt;code&gt;https://&amp;lt;帳號&amp;gt;.gitlab.io/&amp;lt;專案位置&amp;gt;&lt;/code&gt;，從這裡就可以看到你部署上去的頁面了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/gitlab/gitlab-pages-2.png&#34; alt=&#34;Gitlab page&#34;&gt;&lt;/p&gt;
&lt;p&gt;詳細的 &lt;code&gt;Gitlab Page 自訂網址&lt;/code&gt; 及 &lt;code&gt;存取權限&lt;/code&gt; 可以參考 &lt;a href=&#34;https://dev.kejyun.com/article/2021/08/gitlab-page-2021/&#34;&gt;使用 Gitlab page 建立私密的靜態部落格網站&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.kejyun.com/article/2021/08/gitlab-page-2021/&#34;&gt;使用 Gitlab page 建立私密的靜態部落格網站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
